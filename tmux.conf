# set-option -g prefix C-a


bind < split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-รถ if-shell "$is_vim" "send-keys C-รถ"  "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-รถ select-pane -l

# reload config file (change file location to your the tmux.conf you want to use)
bind E source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."
bind e split-window -v "vim ~/.tmux.conf"
# don't rename windows automatically
set-option -g allow-rename off

# enable vi mode (cor Copy mode)
setw -g mode-keys vi

# restore Clear Screen:
bind C-l send-keys 'C-l'

# for scrolling:
# https://superuser.com/questions/209437/how-do-i-scroll-in-tmux
bind v copy-mode

# vi like cursor movement in copy mode
set-window-option -g mode-keys vi

# https://superuser.com/questions/395158/tmux-copy-mode-select-text-block/593712
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi 'v' send -X begin-selection # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle # Begin selection in copy mode.
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel # Yank selection in copy mode.
# comment the preceding line and uncomment the following to yank to X clipboard
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind V paste-buffer
# show clipboard history
bind Space choose-buffer

set-option -g history-limit 30000

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Highlight active window
set-window-option -g window-status-current-bg red

set-option -g default-terminal "screen-256color"

set status-utf8 on
set utf8 on

set -g status-bg yellow
